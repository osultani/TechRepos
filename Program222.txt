#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int instructionClass;			//Whichever instruction class
int freq;						//Frequency of machine
int count;						//Count of classes
int instructTotal;				//Instruction count total

int sum = 0;
int * instructionClassX;					
int * numCPI;



// Computing CPI, MIPS, CPU run time averages
double infoAverage(){
   int optionX=0;
   int i=0;
   double average =0;
   for( i =0; i < count; i++){
      optionX = (numCPI[i] * instructionClassX[i]);
      average += (double) optionX;
   }
   return average/ instructTotal;
}

//Returns value of computed CPUtime
double CPUtime()
{
   return ((infoAverage() * instructTotal)/freq)*1000;
   
}

//Returns value of average MIPS time
double MIPS (){
   
   return ((freq * pow(10,6)/ (infoAverage() * pow(10,6))));

}

//Creates an array of however large the user decides
void option1(){
	
   int optA;			//Cpi Number
   int optB;			//Instruction count of class
   
   
   printf("Enter The Number of Instruction Classes:\n");
   scanf("%d",&instructionClass);
   printf("Enter The Frequency of The Machine (MHz):\n");
   scanf("%d",&freq);
   
   //Allocate a block of memory based on size of int entered and store in array
   int * array1 = malloc(instructionClass * sizeof(int));
   int * array2 = malloc(instructionClass * sizeof(int));
   
   
   for(count=0; count < instructionClass; count++){
     
      printf("Enter CPI of Class %d: \n", count+1);
      scanf("%d", &optA);
      array1[count] = optA;
      printf("Enter Instruction Count of Class %d ",count+1);
	  printf("(Millions): \n");
      scanf("%d", &optB);
      array2[count] = optB;
      instructTotal += array2[count];
       
   } 
   numCPI = array1;
   instructionClassX = array2;
}

//Prints int values that were input by the user
void option2(){
   int i;

   printf("Class |");
   printf("CPI |");
   printf(" Count\n");
   for(i =0; i<instructionClass; i++){
      printf("%d     |",   i+1);
      printf( "%d   |",  numCPI[i]);
      printf("  %d \n",  instructionClassX[i]);
   }
}

void option3(){

//Prints average CPI, CPU time, and MIPS
   
   
   printf("Performance | Value \n");
   printf(" Average CPI | %.2lf\n ", infoAverage());
   printf("CPU Time    | %.2lf\n", CPUtime());
   printf(" MIPS        | %.2lf\n", MIPS());
}


//Do while loop until user decides to quit menu

int main(){
  
   int choice;
   
   do{
	  printf("\n");
      printf("Omar Sultani\n");
      printf("Performance assessment: \n");
	  printf("-----------------------\n");
	  printf("1)Enter Parameters\n");
	  printf("2)Print Table of Parameters\n");
	  printf("3)Print Table of Performance\n");
	  printf("4)Quit\n");
	  
	  printf("Enter choice: \n");
   
      scanf("%d",&choice);
	  printf("\n");
   
      if( choice == 1){
         option1 ();
      
      }       
      if (choice == 2)
      {
         option2();
      
      }
      if (choice == 3)
      {option3 ();
      
	  }
      if (choice == 4){
      }
   }
   while((choice== 1||choice== 2||choice== 3)&& (choice!= 4));

}
